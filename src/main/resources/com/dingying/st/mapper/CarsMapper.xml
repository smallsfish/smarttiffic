<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dingying.st.dao.CarsMapper">
  <resultMap id="BaseResultMap" type="com.dingying.st.po.Cars">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="plate_number" jdbcType="VARCHAR" property="plateNumber" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="model" jdbcType="VARCHAR" property="model" />
    <result column="color" jdbcType="VARCHAR" property="color" />
    <result column="balance" jdbcType="DECIMAL" property="balance" />
    <result column="flag" jdbcType="VARCHAR" property="flag" />
  </resultMap>
  <sql id="carsColumns">
    <![CDATA[ id,plate_number,name,model,color,balance,flag ]]>
  </sql>
  <sql id="carsDynamicWhere">
    <where>
      <if test="null != id and '' !=  id">and id = #{ id}</if>
      <if test="null != plateNumber and '' !=  plateNumber">and plate_number = #{ plateNumber}</if>
      <if test="null != name and '' !=  name">and name = #{ name}</if>
      <if test="null != model and '' !=  model">and model = #{ model}</if>
      <if test="null != color and '' !=  color">and color = #{ color}</if>
      <if test="null != balance and '' !=  balance">and balance = #{ balance}</if>
      <if test="null != flag and '' !=  flag">and flag = #{ flag}</if>
	</where>
  </sql>
  <sql id="carsDynamicLikeWhere">
    <where>
      <if test="null != id and '' !=  id">and id LIKE #{ id}</if>
      <if test="null != plateNumber and '' !=  plateNumber">and plate_number LIKE #{ plateNumber}</if>
      <if test="null != name and '' !=  name">and name LIKE #{ name}</if>
      <if test="null != model and '' !=  model">and model LIKE #{ model}</if>
      <if test="null != color and '' !=  color">and color LIKE #{ color}</if>
      <if test="null != balance and '' !=  balance">and balance LIKE #{ balance}</if>
      <if test="null != flag and '' !=  flag">and flag LIKE #{ flag}</if>
	</where>
  </sql>
  <select id="getById" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select <include refid="carsColumns" /> from  cars where id = #{id}
  </select>
  <select id="getOne" parameterType="com.dingying.st.po.Cars" resultMap="BaseResultMap">
    select <include refid="carsColumns" /> from  cars <include refid="carsDynamicWhere" /> limit 0 , 1
  </select>
  <select id="list" parameterType="map" resultMap="BaseResultMap">
    select <include refid="carsColumns" /> from  cars <include refid="carsDynamicWhere" />
	<if test="orderBy != null and orderBy != ''">
          order by ${orderBy}
      </if>
  </select>
  <select id="listPage" parameterType="map" resultMap="BaseResultMap">
    select <include refid="carsColumns" /> from  cars <include refid="carsDynamicWhere" />
	<if test="orderBy != null">
            order by ${orderBy}
        </if>
        <if test="fromIndex != null and fromIndex > -1 and pageSize != null and pageSize > 0">
            limit #{fromIndex},#{pageSize}
        </if>
  </select>
  <select id="listLikePage" parameterType="map" resultMap="BaseResultMap">
    select <include refid="carsColumns" /> from  cars <include refid="carsDynamicLikeWhere" />
	<if test="orderBy != null">
            order by ${orderBy}
        </if>
        <if test="fromIndex != null and fromIndex > -1 and pageSize != null and pageSize > 0">
            limit #{fromIndex},#{pageSize}
        </if>
  </select>
  <select id="countLike" parameterType="com.dingying.st.po.Cars" resultType="java.lang.Long">
    select count(1) from cars <include refid="carsDynamicLikeWhere" />
  </select>
  <select id="count" parameterType="com.dingying.st.po.Cars" resultType="java.lang.Long">
    select count(1) from cars <include refid="carsDynamicWhere" />
  </select>
  <sql id="save_cars_columns">
    insert into cars(
		plate_number ,name ,model ,color ,balance ,flag
	) values
  </sql>
  <sql id="save_cars_values">
    (
	  #{ plateNumber,jdbcType=VARCHAR},
	  #{ name,jdbcType=VARCHAR},
	  #{ model,jdbcType=VARCHAR},
	  #{ color,jdbcType=VARCHAR},
	  #{ balance,jdbcType=DECIMAL},
	  #{ flag,jdbcType=VARCHAR}
	)
  </sql>
  <insert id="save" keyProperty="id" parameterType="com.dingying.st.po.Cars" useGeneratedKeys="true">
    <include refid="save_cars_columns" /><include refid="save_cars_values" />
  </insert>
  <insert id="batchSave" parameterType="list">
    <foreach collection="list" index="index" item="item" open="" separator=";" close="">
	  <include refid="save_cars_columns" /><include refid="save_cars_values" />
	</foreach>
  </insert>
  <sql id="carsUpdate">
    update cars 
	<set> 
      <if test="null != plateNumber">plate_number = #{ plateNumber,jdbcType=VARCHAR},</if>
      <if test="null != name">name = #{ name,jdbcType=VARCHAR},</if>
      <if test="null != model">model = #{ model,jdbcType=VARCHAR},</if>
      <if test="null != color">color = #{ color,jdbcType=VARCHAR},</if>
      <if test="null != balance">balance = #{ balance,jdbcType=DECIMAL},</if>
      <if test="null != flag">flag = #{ flag,jdbcType=VARCHAR}</if>
	</set>
	where id = #{id}
  </sql>
  <update id="update" parameterType="com.dingying.st.po.Cars">
    <include refid="carsUpdate" />
  </update>
  <update id="batchUpdate" parameterType="list">
    <foreach collection="list" index="index" item="item" open="" separator=";" close="">
	  <include refid="carsUpdate" />
	</foreach>
  </update>
  <delete id="delById">
    <![CDATA[ delete from cars where id = #{id} ]]>
  </delete>
  <delete id="delArray">
    delete from cars where id in
	<foreach collection="array" index="index" item="item" open="(" separator="," close=")">#{item}</foreach>
  </delete>
  <delete id="delList">
    delete from cars where id in
	<foreach collection="list" index="index" item="item" open="(" separator="," close=")">#{item}</foreach>
  </delete>
</mapper>